import { Group, Tabs } from '@mantine/core';
import Head from 'next/head';

import { FiEye, FiPlus } from 'react-icons/fi';
import { BiSave } from 'react-icons/bi';

import AdminLayout from '../../../components/admin/Layout';
import { MenuModule } from '../../../components/admin/MenuModule';
import { ShapeOne } from './accesories/ShapeOne';


import { ShapeTwo } from './accesories/ShapeTwo';
import { useActions } from './useActions';
import { PreviewModal } from './accesories/PreviewModal';

const Menu = () => {
  const { json, addShapeOneItem, removeShapeOneItem, updateShapeOneItem, addShapeOne,
    removeShapeOne, updateShapeOne, updateShapeTwoItem, addShapeTwoItem, addShapeTwo,
    removeShapeTwo, removeShapeTwoItem, updateShapeTwo, dailyDishPrice, onSave, setDailyDishPrice,
    openPreviewModal, setOpenPreviewModal, typeId } = useActions();

  return (
    <>
      <Head>
        <title>Pa&apos; Come Admin | Menú</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PreviewModal menu={{ typeId, items: json }} open={openPreviewModal} setOpen={setOpenPreviewModal} />
      <AdminLayout>
        <div className="w-full flex flex-col gap-8">
          <div className="flex w-full items-center justify-between">
            <div className="w-fit">
              <span className="text-blue-900 text-2xl font-semibold">
                Administrar Menú
              </span>
              <div className="h-[3px] w-40 bg-blue-400 self-start rounded-full"></div>
            </div>
            <div>
              <button onClick={() => setOpenPreviewModal(true)} className="bg-yellow-400 hover:bg-yellow-300 flex items-center py-1.5 px-4 gap-2 uppercase italic rounded-md">
                <FiEye className="shrink-0" />
                Vista Previa
              </button>

              <button onClick={onSave} className="mt-1 text-white bg-blue-400 hover:bg-blue-300 flex items-center py-1.5 px-4 gap-2 uppercase italic rounded-md">
                <BiSave />
                Guardar
              </button>

            </div>
          </div>
          <div>
            <Tabs variant="pills" defaultValue="lunch">
              <Tabs.List className="w-fit gap-3 bg-[#1A579A] px-5 py-1.5 rounded-md font-semibold">
                <Tabs.Tab
                  className="text-white hover:text-[#1A579A] font-[poppins]"
                  value="lunch"
                >
                  Plato del día
                </Tabs.Tab>
                <Tabs.Tab
                  className="text-white hover:text-[#1A579A] font-[poppins]"
                  value="cafeteria"
                >
                  Cafetería
                </Tabs.Tab>
                <Tabs.Tab
                  className="text-white hover:text-[#1A579A] font-[poppins]"
                  value="breakfast"
                >
                  Desayunos
                </Tabs.Tab>
                <Tabs.Tab
                  className="text-white hover:text-[#1A579A] font-[poppins]"
                  value="pastry"
                >
                  Repostería
                </Tabs.Tab>
                <Tabs.Tab
                  className="text-white hover:text-[#1A579A] font-[poppins]"
                  value="bakery"
                >
                  Panadería
                </Tabs.Tab>
                <span className="md:text-sm text-xs font-semibold cursor-pointer text-white tracking-wider bg-blue-600 rounded-md px-2.5 min-h-[40px] h-full flex items-center font-[poppins] hover:text-blue-500">
                  <FiPlus size={20} />
                </span>
              </Tabs.List>

              <Tabs.Panel value="lunch" pt="xs">
                <div className="flex flex-col gap-5">
                  <div className="py-4 flex flex-col gap-2">
                    <span className="text-[#1A579A] font-semibold">
                      Precio del plato del día
                    </span>
                    <div className="flex justify-center items-center w-fit border-2 border-[#1A579A] rounded-lg font-[poppins]">
                      <span className="text-gray-400 px-3">$</span>
                      <input
                        className="outline-none max-w-[100px] px-1 font-[poppins] py-2 h-full"
                        type="text"
                        placeholder="150"
                        value={dailyDishPrice}
                        onChange={e => setDailyDishPrice(parseInt(e.currentTarget.value || 0))}
                      />
                      <span className="bg-blue-100 rounded-lg py-2 px-3 text-gray-400">
                        DOP
                      </span>
                    </div>
                  </div>
                  <MenuModule
                    title="Plato del día"
                    onAccept={({ name }) => addShapeOne({ name, extra: false })}
                    shapeAvalibles={[{ value: 1, label: 'Forma 1' }]}
                  />
                  {json.filter(x => !x.extra).map(x => (
                    <ShapeOne
                      isDailyDish={true}
                      key={x.id}
                      item={x}
                      updateShapeOne={updateShapeOne}
                      removeShapeOne={removeShapeOne}
                      addShapeOneItem={addShapeOneItem}
                      removeShapeOneItem={removeShapeOneItem}
                      updateShapeOneItem={updateShapeOneItem}
                    />
                  ))}
                  <MenuModule
                    title="Extras"
                    onAccept={({ name, fieldsetTypeId }) => fieldsetTypeId === 1 ? addShapeOne({ name, extra: true }) : addShapeTwo({ name })}
                    shapeAvalibles={[{ value: 1, label: 'Forma 1' }, , { value: 2, label: 'Forma 2' }]}
                  />
                  {json
                    .filter(x => x.extra)
                    .map(x => x.fieldsetTypeId === 1 ?
                      <ShapeOne
                        isDailyDish={false}
                        key={x.id}
                        item={x}
                        updateShapeOne={updateShapeOne}
                        removeShapeOne={removeShapeOne}
                        addShapeOneItem={addShapeOneItem}
                        removeShapeOneItem={removeShapeOneItem}
                        updateShapeOneItem={updateShapeOneItem}
                      />
                      : <ShapeTwo
                        key={x.id}
                        item={x}
                        updateShapeTwoItem={updateShapeTwoItem}
                        addShapeTwoItem={addShapeTwoItem}
                        removeShapeTwo={removeShapeTwo}
                        removeShapeTwoItem={removeShapeTwoItem}
                        updateShapeTwo={updateShapeTwo}
                      />
                    )}
                </div>
              </Tabs.Panel>

              <Tabs.Panel value="cafeteria" pt="xs">
                Cafetería
              </Tabs.Panel>

              <Tabs.Panel value="breakfast" pt="xs">
                Desayunos
              </Tabs.Panel>

              <Tabs.Panel value="pastry" pt="xs">
                Repostería
              </Tabs.Panel>

              <Tabs.Panel value="bakery" pt="xs">
                Panadería
              </Tabs.Panel>
            </Tabs>
          </div>

        </div>
      </AdminLayout>
    </>
  );
};

export default Menu;
