import Head from 'next/head';
import { GiSandsOfTime } from 'react-icons/gi';
import AdminLayout from '../../components/admin/Layout';
import Link from 'next/link';
import bell from '../../../public/assets/campana.png';
import Image from 'next/image';
import { useAppContext } from '../../AppProvider';
import CounterDown from 'react-countdown';
import { gql, useQuery } from '@apollo/client';
import * as dayjs from 'dayjs';

const ORDERS = gql`
   query Orders($page: Float,$where: OrderWhereInput) {
   orders(page: $page, where: $where) {
      items {
         id
         createdAt
         deliverDate
         noOrder
         statusId
         status {
            id name
         }
         type {
            name id
         }
         user {
            firstname lastname
            id
            department {
               id
               name
            }
            email
         }
         details {
            name
            price
            quantity
            total
            comment
         }
         total
      }
      metadata {
         totalItems
         perPage
         totalPages
      }
  }
}
`;

const USERS = gql`
   query Users($page: Float, $where: UserWhereInput) {
      users(page: $page, where: $where) {
         items {
            id firstname lastname email cedula createdAt enabled enableDate
            department {
               id name
            }
            company { id name }
         }
         metadata {
            totalItems totalPages perPage
         }
      }
   }
`

const Dashboard = ({ totalReports = '12' }) => {
  const { data } = useQuery(ORDERS, {
    variables: {
      page: 0,
      where: {
        "fromDate": dayjs().format('YYYY-MM-DD'),
        "filterDateByDelivered": false,
        "toDate": dayjs().format('YYYY-MM-DD'),
        statusIds: [2, 3, 4]
      }
    },
    fetchPolicy: 'cache-and-network',
  });

  const { data: dataUsers } = useQuery(USERS, {
    fetchPolicy: 'cache-and-network',
    variables: {
      page: 0,
      where: {
        enabled: false
      },
    },
  });

  const totalItems = data ? data.orders.metadata.totalItems : 0;
  const totalRequest = dataUsers ? dataUsers.users.metadata.totalItems : 0;

  const [{ user, generalParameters }] = useAppContext();
  const hourLimit = parseInt(
    generalParameters.find((item) => item.id === 2)?.value || 0
  );

  const countDownDate = dayjs()
    .set('hours', hourLimit)
    .set('minutes', 0)
    .set('seconds', 0)
    .set('millisecond', 0)
    .valueOf();

  function generateSeq(size, count) {
    const breakpoint = size - count.toString().length;
    const result =
      [...Array(breakpoint)].map(() => '0').join('') + count.toString();
    return result;
  }

  if (user) {
    return (
      <>
        <Head>
          <title>Pa&apos; Come Admin | Dashboard</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <AdminLayout>
          <div className="w-full mb-6 text-[#003579] font-[poppins] font-semibold">
            <span>
              ¡Bienvenido,{' '}
              <span className="text-[#4278bf]">{`${user.firstname} ${user.lastname}`}</span>
              !
            </span>
          </div>
          <div className="w-full mb-6 grid lg:grid-cols-3 grid-cols-1 gap-5 gap-y-6 xl:gap-12">
            <div className="lg:w-full w-full max-w-[400px] mx-auto rounded-lg shadow-md flex flex-col justify-around font-[poppins] items-center px-3 lg:px-10 min-h-[350px] py-6 gap-6 text-center bg-white">
              <span className="text-blue-900 italic text-xl md:text-2xl px-3 ">
                Tiempo disponible
              </span>
              <GiSandsOfTime className="text-blue-500" size={130} />
              <span className="text-blue-900 italic font-semibold text-4xl">
                <CounterDown
                  date={countDownDate}
                  renderer={({ hours, minutes, seconds }) => (
                    <>{`${generateSeq(2, hours)}:${generateSeq(
                      2,
                      minutes
                    )}:${generateSeq(2, seconds)}`}</>
                  )}
                />
              </span>
            </div>

            <div className="lg:w-full relative w-full max-w-[400px] mx-auto rounded-lg shadow-md flex flex-col justify-around font-[poppins] items-center px-3 xl:px-10 min-h-[350px] py-6 gap-6 text-center bg-white">
              <div className="w-fit absolute right-0 top-0 p-4">
                <Image src={bell} alt="Bell" />
              </div>
              <span className="text-blue-900 italic text-xl md:text-2xl px-3 xl:px-5">
                Pedidos
              </span>
              <div className="border-4 text-7xl italic border-blue-500 text-blue-500 p-6 rounded-full">
                {totalItems}
              </div>
              <Link
                className="text-lg underline underline-offset-2 italic text-blue-500"
                href="/admin/pedidos"
              >
                Ver todos
              </Link>
            </div>

            <div className="lg:w-full w-full max-w-[400px] mx-auto rounded-lg shadow-md flex flex-col justify-around font-[poppins] items-center px-3 xl:px-10 min-h-[350px] py-6 gap-6 text-center bg-white">
              <span className="text-blue-900 italic text-xl md:text-2xl px-3 xl:px-5">
                Solicitudes
              </span>
              <div className="bg-blue-500 text-7xl italic text-white p-7 rounded-full">
                {totalRequest}
              </div>
              <Link
                className="text-lg underline underline-offset-2 italic text-blue-500"
                href="/admin/empleados/requests"
              >
                Ver todas
              </Link>
            </div>
          </div>
          <div className="mb-6">
            <span className="text-blue-900 text-2xl font-semibold">
              Resumen de monitoreo
            </span>
            <div className="h-[3px] w-56 bg-blue-400 self-start rounded-full" />
          </div>
          <div>
            <span className="text-red-500 italic font-semibold text-lg">
              Reportes
            </span>
            <div className="flex gap-2">
              <span className="italic font-semibold">
                Un total de {totalReports} reportes pendientes.
              </span>
              <Link
                className="underline underline-offset-2 text-blue-400 font-semibold italic"
                href="/admin/reportes"
              >
                Ver más
              </Link>
            </div>
          </div>
        </AdminLayout>
      </>
    );
  }
};

export default Dashboard;
