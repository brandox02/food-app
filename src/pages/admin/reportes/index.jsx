import { createStyles, Modal, Pagination, Select, Table } from '@mantine/core';
import Head from 'next/head';
import Image from 'next/image';
import { FiSearch } from 'react-icons/fi';
import { RiBrush3Line } from 'react-icons/ri';
import AdminLayout from '../../../components/admin/Layout';
import pdfexport from '../../../../public/assets/pdfexport.png';
import docexport from '../../../../public/assets/docexport.png';
import xlsexport from '../../../../public/assets/xlsexport.png';
import { useState } from 'react';
import { useActions } from './useActions';
import dayjs from 'dayjs';
import { FormProvider } from '../../../components/react-hook-form/FormProvider';
import { RHFSelect } from '../../../components/react-hook-form/RHFSelect';
import { RHFDatePicker } from '../../../components/react-hook-form/RHFDatePicker';
import { RHFTextInput } from '../../../components/react-hook-form/RHFTextInput';
import { ClaimModal } from '../../../components/ClaimModal';

const Reportes = () => {
  const { claims, setPage, totalPages, totalItems, dateFilterMethods, onSeachDateFilter,
    clearFilters, otherFilterMethods, onSearchOtherFilter, claimModal, setClaimModal, refetch } = useActions();
  const useStyles = createStyles(() => ({
    input: {
      borderWidth: 2,
      borderRadius: 10,
      borderColor: '#1A579A',
      fontFamily: 'poppins',
    },
  }));
  const { classes } = useStyles();


  const rows = claims.map((claim) => (
    <tr key={claim.id}>
      <td>{claim.order.noOrder}</td>
      <td>{dayjs(claim.createdAt).format('DD/MM/YYYY')}</td>
      <td>{dayjs(claim.order.createdAt).format('DD/MM/YYYY')}</td>
      <td>{claim.done ? 'Si' : 'No'}</td>
      <td>{`${claim.order.user.firstname} ${claim.order.user.lastname}`}</td>
      <td>{claim.order.user.email}</td>
      <td>{claim.order.user.department?.name}</td>
      <td className="cursor-pointer">
        <div
          onClick={() => setClaimModal(claim)}
          className="cursor-pointer underline underline-offset-2 text-blue-400"
        >
          Ver reporte
        </div>
      </td>
    </tr>
  ));
  const [opened, setOpened] = useState(false);

  return (
    <>
      <Head>
        <title>Pa&apos; Come Admin | Reportes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ClaimModal open={claimModal} setOpen={setClaimModal} claim={claimModal} refetch={refetch} />
      <Modal
        size={'xl'}
        centered
        opened={opened}
        onClose={() => setOpened(false)}
        title={
          <div className="w-fit mb-5">
            <span className="text-blue-900 text-xl font-semibold">
              {'Reporte de Pedido'}
            </span>
            <div className="h-[3px] w-40 bg-blue-400 self-start rounded-full"></div>
          </div>
        }
      ></Modal>
      <AdminLayout>
        <div className="w-full flex flex-col gap-8">
          <div className="w-fit">
            <span className="text-blue-900 text-2xl font-semibold">
              Reportes
            </span>
            <div className="h-[3px] w-16 bg-blue-400 self-start rounded-full" />
          </div>

          <div className="-mb-3">
            <span className="text-md italic font-semibold text-blue-400">
              Filtro de búsqueda
            </span>
          </div>

          <div className="w-full flex flex-col gap-4">
            <FormProvider methods={dateFilterMethods} onSubmit={onSeachDateFilter}>
              <div className="w-full flex flex-col gap-5 lg:gap-0 md:flex-row flex-wrap">
                <div className="w-full lg:w-9/12 2xl:w-10/12 grid md:grid-cols-3 gap-3 lg:gap-5">
                  <div className="flex flex-col gap-1">
                    <span className="text-[#003579] font-[poppins] text-sm">
                      Filtrar por fecha de:
                    </span>
                    <RHFSelect
                      classNames={{
                        input: classes.input,
                      }}
                      items={[
                        { name: 'Reporte', id: true },
                        { name: 'Orden', id: false }
                      ]}
                      name={'filterDateByClaimDate'}
                      clearable={false}
                    />
                  </div>
                  <div className="flex flex-col gap-1">
                    <span className="text-[#003579] font-[poppins] text-sm">
                      Desde:
                    </span>
                    <RHFDatePicker name={'fromDate'} clearable={false} />
                  </div>
                  <div className="flex flex-col gap-1">
                    <span className="text-[#003579] font-[poppins] text-sm">
                      Hasta:
                    </span>
                    <RHFDatePicker name={'toDate'} clearable={false} />
                  </div>
                </div>
                <div className="w-full lg:w-3/12 2xl:w-2/12 flex lg:justify-end items-end gap-3">
                  <button className="flex cursor-pointer gap-1 text-sm bg-blue-600 hover:bg-blue-500 text-white uppercase items-center rounded-lg px-3 py-2">
                    <FiSearch />
                    <span>
                      Buscar
                    </span>
                  </button>
                  <span onClick={clearFilters} className="cursor-pointer flex gap-1 text-sm bg-red-500 hover:bg-red-400 text-white uppercase items-center rounded-lg px-3 py-2">
                    <RiBrush3Line />
                    Limpiar
                  </span>
                </div>
              </div>
            </FormProvider>
            <div style={{ borderTop: '3px solid #E9ECEF' }} className='my-1'></div>
            <FormProvider methods={otherFilterMethods} onSubmit={onSearchOtherFilter}>
              <div className="w-full flex-wrap md:flex-nowrap flex items-end gap-3">
                <div className="flex w-full sm:w-[50%] flex-col gap-1">
                  <span className="text-[#003579] font-[poppins] text-sm">
                    Buscar por No. Orden:
                  </span>
                  <RHFTextInput name={'noOrder'} placeholder='No. Orden' />

                </div>
                <div className='flex flex-col gap-1'>
                  <span className="text-[#003579] font-[poppins] text-sm">
                    Filtrar por realizados:
                  </span>
                  <RHFSelect name={'done'} placeholder={'No filtrar'} items={[{ id: false, name: 'No', }, { id: true, name: 'Sí' }]} />
                </div>
                <button className="mr-4 flex cursor-pointer gap-1 text-sm bg-blue-600 hover:bg-blue-500 text-white uppercase items-center rounded-lg px-3 py-2">
                  <FiSearch />
                  <span>
                    Buscar
                  </span>
                </button>
              </div>
            </FormProvider>

          </div>

          <div className="flex flex-col gap-3 mt-6 cursor-not-allowed" onClick={() => alert('Funcionalidad en desarrollo todavia')}>
            <div className="flex items-center gap-3">
              <span className="text-md whitespace-nowrap text-blue-900 font-semibold italic">
                Exportación de Datos
              </span>
              <div className="bg-gray-300 h-0.5 rounded-full w-full"></div>
            </div>
            <div className="flex gap-4 px-2">
              <Image className="cursor-pointer" src={pdfexport} alt="" />
              <Image className="cursor-pointer" src={docexport} alt="" />
              <Image className="cursor-pointer" src={xlsexport} alt="" />
            </div>
          </div>

          <div className="flex flex-col gap-6">
            <div className="flex gap-2 items-center justify-between flex-wrap">
              <span className="text-lg italic font-semibold text-blue-400">
                Listado de Reportes entregadas hoy ({totalItems})
              </span>
            </div>

            <div id="scrollbar" className="w-auto overflow-auto">
              <Table highlightOnHover verticalSpacing="sm">
                <thead className="bg-[#47ADF5]/30 italic font-[poppins] ">
                  <tr>
                    <th>No. Orden</th>
                    <th>Fecha Reporte</th>
                    <th>Fecha Orden</th>
                    <th>Marcado como realizado</th>
                    <th>Nombre</th>
                    <th>Correo</th>
                    <th>Departamento</th>
                    <th></th>
                  </tr>
                </thead>
                <tbody className="font-[poppins]">{rows}</tbody>

              </Table>
              <Pagination total={totalPages} onChange={(e) => setPage(e)} />
            </div>
          </div>
        </div>
      </AdminLayout>
    </>
  );
};

export default Reportes;
