import Head from 'next/head';
import AdminLayout from '../../../components/admin/Layout';
import Link from 'next/link';
import { useAppContext } from '../../../AppProvider';

import { gql, useQuery } from '@apollo/client';
import { CountDown } from './accessories/admin/CountDown';
import { Pedidos } from './accessories/admin/Pedidos';
import { AccumulateMonthAmount } from './accessories/enterprise/AccumulateMonthAmount';
import { AvalibleTime } from './accessories/enterprise/AvalibleTime';
import { Request } from './accessories/enterprise/Request';

const USERS = gql`
   query Users($page: Float, $where: UserWhereInput) {
      users(page: $page, where: $where) {
         items {
            id firstname lastname email cedula createdAt enabled enableDate
            department {
               id name
            }
            company { id name }
         }
         metadata {
            totalItems totalPages perPage
         }
      }
   }
`


const CLAIMS = gql`
   query Claims($page: Float, $where: WhereClaimInput) {
      claims(page: $page, where: $where) {
         items {
           id name description createdAt 
           order { 
               createdAt
               noOrder
               user {
                  email firstname lastname department { name }
               }
           }
         }
         metadata {
            totalItems totalPages perPage
         }
      }
   }
`;

const Dashboard = ({ }) => {

  const { data: dataUsers } = useQuery(USERS, {
    fetchPolicy: 'cache-and-network',
    variables: {
      page: 0,
      where: {
        enabled: false,
        roleId: 1
      },
    },
  });

  const { data: dataClaims } = useQuery(CLAIMS, {
    fetchPolicy: 'cache-and-network',
    variables: {
      page: 0,
      where: {
        done: false
      },
    },
  });


  const totalRequest = dataUsers ? dataUsers.users.metadata.totalItems : 0;
  const totalClaims = dataClaims ? dataClaims.claims.metadata.totalItems : 0;

  const [{ user }] = useAppContext();

  if (user) {
    return (
      <>
        <Head>
          <title>Pa&apos; Come Admin | Dashboard</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <AdminLayout>
          <div className="w-full mb-6 text-[#003579] font-[poppins] font-semibold">
            <span>
              ¡Bienvenido,{' '}
              <span className="text-[#4278bf]">{`${user.firstname} ${user.lastname}`}</span>
              !
            </span>
          </div>
          <div className="w-full mb-6 grid lg:grid-cols-3 grid-cols-1 gap-5 gap-y-6 xl:gap-12">
            {user.role.id === 3 ? (
              <>

                <Pedidos />
              </>
            ) : (
              <>
                <AccumulateMonthAmount />
                {/* <AvalibleTime /> */}
              </>
            )}
            <CountDown />
            <Request total={totalRequest} />
          </div>
          <div className="mb-6">
            <span className="text-blue-900 text-2xl font-semibold">
              Resumen de monitoreo
            </span>
            <div className="h-[3px] w-56 bg-blue-400 self-start rounded-full" />
          </div>
          <div>
            <span className="text-red-500 italic font-semibold text-lg">
              Reportes
            </span>
            <div className="flex gap-2">
              <span className="italic font-semibold">
                Un total de {totalClaims} reportes pendientes.
              </span>
              <Link
                className="underline underline-offset-2 text-blue-400 font-semibold italic"
                href="/admin/reportes"
              >
                Ver más
              </Link>
            </div>
          </div>
        </AdminLayout>
      </>
    );
  }
};

export default Dashboard;
