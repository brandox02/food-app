import { Pagination, Table } from '@mantine/core';
import Head from 'next/head';
import { FiCheck, FiSearch } from 'react-icons/fi';
import { ImCancelCircle } from 'react-icons/im';
import { RiBrush3Line } from 'react-icons/ri';
import AdminLayout from '../../../components/admin/Layout';
import { DetailModal } from './accesories/DetailModal';
import { useActions } from './useActions';
import dayjs from 'dayjs';

const Pedidos = () => {
  const { detailModalOpen, setDetailModalOpen, modalOrder, totalPages, orders, setPage, dailyDishPrice, totalItems
    , noOrderInput, setNoOrderInput, } = useActions();
  const rows = orders.map((order) => (
    <tr key={order.id}>
      <td>{order.noOrder}</td>
      <td>{dayjs(order.createdAt).format('hh:mmA')}</td>
      <td>{`${order.user.firstname} ${order.user.lastname}`}</td>
      <td>{order.user.department.name}</td>
      <td>{(order.statusId === 3 || order.statusId === 4) ? <FiCheck size={20} color={'#19579A'} /> : <ImCancelCircle size={20} color={'red'} />}</td>
      <td>{order.statusId === 4 ? <FiCheck size={20} color={'green'} /> : <ImCancelCircle size={20} color={'red'} />}</td>
      <td>
        <div onClick={() => setDetailModalOpen(order.id)} className="cursor-pointer underline underline-offset-2 text-blue-400">
          Ver detalles
        </div>
      </td>
    </tr>
  ));

  return (
    <>
      <Head>
        <title>Pa&apos; Come Admin | Pedidos</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DetailModal open={detailModalOpen} setOpen={setDetailModalOpen} order={modalOrder} dailyDishPrice={dailyDishPrice} />
      <AdminLayout>
        <div className="w-full flex flex-col gap-8">
          <div className="w-fit">
            <span className="text-blue-900 text-2xl font-semibold">
              Pedidos
            </span>
            <div className="h-[3px] w-16 bg-blue-400 self-start rounded-full" />
          </div>
          <div className="w-full grid gap-4 grid-cols-1 lg:grid-cols-2">
            <div className="w-full flex-wrap md:flex-nowrap flex items-end gap-3">
              <div className="flex w-full sm:w-[60%] flex-col gap-1">
                <span className="text-[#003579] font-[poppins] text-sm">
                  Buscar por No. Orden:
                </span>
                <input
                  value={noOrderInput}
                  onChange={evt => setNoOrderInput(evt.currentTarget.value)}
                  placeholder="No. Orden"
                  className="border-2 border-[#1A579A] px-3 py-1.5 font-[poppins] placeholder:text-sm rounded-lg w-full outline-none"
                />
              </div>
              <div className="flex gap-1 text-sm bg-blue-600 hover:bg-blue-500 text-white uppercase items-center rounded-lg px-3 py-2">
                <FiSearch />
                <span>
                  <button type="submit">Buscar</button>
                </span>
              </div>
            </div>
            {/* <div className="w-full flex-wrap md:flex-nowrap flex items-end gap-3">
              <div className="flex w-full sm:w-[60%] flex-col gap-1">
                <span className="text-[#003579] font-[poppins] text-sm">
                  Filtra nombre:
                </span>
                <input

                  placeholder="Nombre"
                  className="border-2 border-[#1A579A] px-3 py-1.5 font-[poppins] placeholder:text-sm rounded-lg w-full outline-none"
                />
              </div>
              <div className="flex gap-2">
                <div className="flex gap-1 text-sm bg-blue-600 hover:bg-blue-500 text-white uppercase items-center rounded-lg px-3 py-2 cursor-pointer">
                  <FiSearch />
                  <span>
                    <button type="submit">Buscar</button>
                  </span>
                </div>
                <div className="flex gap-1 text-sm bg-red-600 hover:bg-red-500 text-white uppercase items-center rounded-lg px-3 py-2 cursor-pointer">
                  <RiBrush3Line />
                  <span>
                    <button type="submit">Limpiar</button>
                  </span>
                </div>
              </div>
            </div> */}
          </div>

          <div className="flex flex-col gap-3 mt-6">
            <span className="text-blue-400 font-semibold italic text-lg">
              Listado de Pedidos ({totalItems})
            </span>
            <span className="text-gray-400 italic">
              Estos son tus pedidos del día de hoy
            </span>
          </div>
          <div className="flex flex-col gap-6">
            <div className="flex justify-end">
              <button className="bg-green-500 hover:bg-green-400 uppercase font-semibold text-sm rounded py-2 px-4 text-white">
                Marcar todo como entregado
              </button>
            </div>
            <div id="scrollbar" className="w-auto overflow-auto">
              <Table highlightOnHover verticalSpacing="sm">
                <thead className="bg-[#47ADF5]/30 italic font-[poppins] ">
                  <tr>
                    <th>No. Orden</th>
                    <th>Hora</th>
                    <th>Nombre</th>
                    <th>Departamento</th>
                    <th>Confirmación</th>
                    <th>Entregado</th>
                    <th></th>
                  </tr>
                </thead>
                <tbody className="font-[poppins]">{rows}</tbody>
              </Table>
              <Pagination total={totalPages} onChange={e => setPage(e - 1)} />;
            </div>
          </div>
        </div>
      </AdminLayout>
    </>
  );
};

export default Pedidos;
